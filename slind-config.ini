[common]
# Things common to all of the tools go right inside here.
# This is the section intended for users to edit.

# This is where we fetch Debian packages from in order to debootstrap various
# Debian chroots. This should be an URL understandable by debootstrap, that is,
# http://, ftp:// or file://.
debian_mirror = http://ftp.debian.org/debian
# This is the Debian release we use in our development chroots.
debian_suite  = etch

# This is where we fetch Slind packages from, both host-tools such as toolchains
# and target packages. This should be an URL understandable by debootstrap, that
# is, http://, ftp:// or file://.
slind_mirror = http://ftp.slind.org/pub/SLIND
# This is the Slind release we use.
slind_suite  = clydesdale

# This is where Slind git repositories reside. We use them in order to build
# source packages, which are, in turn, used to build binary ones. This is mainly
# for Slind maintainers. Should be an URL understandable by 'git clone' command.
gitbase_url = http://git.slind.org/gitrepos/

# 
# The command we use to gain root rights.
root_cmd      = sudo

# The directory slind tools would use on your host machine for the main (Debian)
# chroot. Every other thing would be performed in this chroot.  The path here
# must be absolute.
# You must probably would want to edit this.
work_dir      = /var/tmp/dev-chroot

# Proxy server to use, if you need one.
# http_proxy_url     = http://localhost:3128/
# ftp_proxy_url	     = http://localhost:3128/

# Number of retries for apt (to overcome network failures).
apt_retries_max = 5

[target]
# Configuration of your target goes here.

# List of your target architectures that you intend to build root
# filesystems/packages for. You can include multiple architectures, each is
# going to be processed in its own subdirectory inside chroot
# %(work_dir)/rootfs-%(arch).
# Full list of currently supported architectures depends on the Slind release
# you are using. At the time of writing, "clydesdale" supports the following
# architectures: i386 powerpc arm mips mipsel sh4a uclibc-mips uclibc-mipsel
# uclibc-powerpc uclibc-i386 uclibc-arm uclibc-sh4a
# Those are Debian architectures names, that is, "uclibc-" ones imply uClibc C
# library, others imply GNU C library.
target_arch = powerpc
# The list of packages which would be added to your final target rootfs using
# apt. Optional.
addon_packages = syslogd joe openssh-server udhcpd

############# MAINTAINER PART ################################################
#
# Starting from this point, you, as a mere user, probably do not want to touch
# anything. These settings have to do with inner workings of Slind utilities.
# Please only edit them if you know for sure what you're doing.
#
##############################################################################

[maintainer-common]
# Common configuration for maintainer/developer tools goes here.

# The following paths are INSIDE CHROOT (work_dir above). By convention, the
# variable names for such kind of paths are prefixed by "chr_". PLEASE, FOLLOW
# IT, otherwise you mess things up for users.

# The directory where cloned git repositories + working copies would reside
# inside chroot. 
chr_gitrepos_dir = /build/grasp-repos

# The directory where source tarballs of the packages would reside inside
# chroot.
chr_tarballs_dir = /build/grasp-tarballs

# The directory where Slind packages would reside inside chroot (in most cases,
# source packages there would be build automatically from local git repository
# copies by 'grasp' tool).
chr_repodir = /build/grasp-out

# Environment variables that you'd like to be set for all commands that are
# being run inside chroot.
chrootenv     = SETNJOBS=48 USENJOBS=48

# OBSOLETE. Command that delivers build packages into repository.
delivercmd      = pool-injectdeb

[slindctl]
# Configuration of the "slindctl" tool goes here.

# List of basic target packages
base_tgt_pkg_list = base-files base-passwd busybox sysvinit ifupdown netbase \
dpkg miniperl apt

# List of host packages that should be installed inside chroot before anything
# Slind-related could run. Toolchains for respective architectures will be added
# to this list at runtime.
base_hst_pkg_list = dpkg dpkg-dev dpkg-cross northern-cross toolchain-package \
debootstrap adduser libglib2.0-dev libfakechroot-cross cross-shell debhelper \
java-package cdbs-slind

# List of host packages that should be installed inside chroot for maintainers,
# that is, during maintainer-setup. Those are mainly things to build packages
# from Slind git repositories, along with basic build-depends.
base_hst_maint_pkg_list = sudo apt-utils adduser realpath lsb-release flex \
sqlite3 dpatch cdbs quilt git-core debhelper debootstrap fakeroot pkg-config \
autoconf2.13 automake1.7 zlib1g-dev libncurses5-dev libcurl3-dev libpopt-dev \
docbook-to-man texi2html texinfo curl libapt-pkg-perl libdbd-sqlite3-perl \
libdbi-perl libnet-daemon-perl libplrpc-perl liblua5.1-0-dev libsqlite3-dev \
libcgi-dev libconfig-inifiles-perl unzip

# Packages which are known to be broken. They will be excluded from
# base_hst_pkg_list at runtime. The place to put toolchain package names that
# you know are surely broken.
broken_hst_pkg_list = sh4a-cross-toolchain

[slindjob]
# Directory which hosts package lists (that is, what's currently included in
# slind target and host parts). Note that this is normally inside chroot.
chr_pkglist_dir = /var/lib/slind-maint

[slind-host-tools-bootstrap]
# List of bootstrap host tools source packages
src_list = dpkg dpkg-cross slind-core toolchain-package grasp northern-cross \
fakechroot-cross cross-shell slindak java-package cdbs-slind
# List of bootstrap host tools binary packages
bin_list = dpkg dpkg-dev dselect dpkg-cross grasp slind-core \
slind-maintainer-core toolchain-package-maintainer northern-cross cross-shell \
libfakechroot-cross slindak java-package cdbs-slind

[cross-shell]
# Location of fstab for target inside development chroot, if not set invalid
# fstab will be generated
chr_tgt_fstab =

# Location of inittab for target inside development chroot, if not set an
# invalid inittab will be generated
chr_tgt_inittab =

# Target host name
tgt_hostname = slind

# Directory, where tarballs with target rootfs will be created
chr_tgt_image_dir = /build

